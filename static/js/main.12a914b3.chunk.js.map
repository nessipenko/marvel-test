{"version":3,"sources":["components/appHeader/AppHeader.js","services/MarvelService.js","components/spinner/Spinner.js","components/error/error.gif","components/error/Error.js","resources/img/mjolnir.png","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","components/errorBoundary/ErrorBoundary.js","resources/img/vision.png","components/app/App.js","index.js"],"names":["AppHeader","className","href","MarvelService","_apiBase","_apiKey","_baseOffset","getResource","url","fetch","res","ok","Error","status","json","getAllCharacters","a","offset","data","results","map","_transformCharacter","getCharacter","id","char","name","description","slice","thumbnail","path","extension","homepage","urls","wiki","comics","items","Spinner","xmlns","style","margin","background","display","width","height","viewBox","preserveAspectRatio","transform","cx","cy","r","fill","fillOpacity","attributeName","type","begin","values","keyTimes","dur","repeatCount","src","img","alt","objectFit","RandomChar","state","loading","error","marvelService","onCharLoaded","setState","onCharLoading","onError","updateChar","Math","floor","random","then","catch","this","timerId","setInterval","clearInterval","errorM","spinner","content","onClick","mjolnir","Component","View","imgStyle","CharList","charList","newItemsLoading","charEnded","onRequest","onCharListLoading","onCharListLoaded","newcharList","ended","length","itemRefs","setRef","ref","push","focusOnItem","forEach","item","classList","remove","add","focus","arr","i","tabIndex","props","onCharSelected","onKeyPress","e","key","renderItems","disabled","Skeleton","CharInfo","charId","prevProps","skeleton","ErrorBoundary","errorInfo","children","App","selectedChar","decoration","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.12a914b3.chunk.js","sourcesContent":["import './appHeader.scss';\n\nconst AppHeader = () => {\n    return (\n        <header className=\"app__header\">\n            <h1 className=\"app__title\">\n                <a href=\"#\">\n                    <span>Marvel</span> information portal\n                </a>\n            </h1>\n            <nav className=\"app__menu\">\n                <ul>\n                    <li><a href=\"#\">Characters</a></li>\n                    /\n                    <li><a href=\"#\">Comics</a></li>\n                </ul>\n            </nav>\n        </header>\n    )\n}\n\nexport default AppHeader;","\nclass MarvelService {\n    _apiBase = 'https://gateway.marvel.com:443/v1/public/';\n    _apiKey = 'apikey=40629014a6750da0da3b7fc624dceba0';\n    _baseOffset = 210;\n\n    getResource = async (url) => {\n        let res = await fetch(url);\n\n        if (!res.ok) {\n            throw new Error(`Could not fetch ${url}, status: ${res.status}`);\n        }\n\n        return await res.json();\n    }\n\n    getAllCharacters = async (offset = this._baseOffset) => {\n        const res = await this.getResource(`${this._apiBase}characters?limit=9&offset=${offset}&${this._apiKey}`);\n        return res.data.results.map(this._transformCharacter);\n    }\n\n    getCharacter = async (id) => {\n        const res = await this.getResource(`${this._apiBase}characters/${id}?${this._apiKey}`);\n        return this._transformCharacter(res.data.results[0]);\n    }\n\n    _transformCharacter = (char) => {\n        return {\n            id: char.id,\n            name: char.name,\n            description: char.description ? `${char.description.slice(0, 210)}...` : 'Description not found',\n            thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\n            homepage: char.urls[0].url,\n            wiki: char.urls[1].url,\n            comics: char.comics.items\n        }\n    }\n}\n\n\nexport default MarvelService;","const Spinner = () => {\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" style={{ margin: '0 auto', background: 'none', display: 'block' }} width=\"200px\" height=\"200px\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\">\n            <g transform=\"translate(80,50)\">\n                <g transform=\"rotate(0)\">\n                    <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"1\">\n                        <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.875s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n                        <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.875s\"></animate>\n                    </circle>\n                </g>\n            </g><g transform=\"translate(71.21320343559643,71.21320343559643)\">\n                <g transform=\"rotate(45)\">\n                    <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.875\">\n                        <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.75s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n                        <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.75s\"></animate>\n                    </circle>\n                </g>\n            </g><g transform=\"translate(50,80)\">\n                <g transform=\"rotate(90)\">\n                    <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.75\">\n                        <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.625s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n                        <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.625s\"></animate>\n                    </circle>\n                </g>\n            </g><g transform=\"translate(28.786796564403577,71.21320343559643)\">\n                <g transform=\"rotate(135)\">\n                    <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.625\">\n                        <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.5s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n                        <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.5s\"></animate>\n                    </circle>\n                </g>\n            </g><g transform=\"translate(20,50.00000000000001)\">\n                <g transform=\"rotate(180)\">\n                    <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.5\">\n                        <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.375s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n                        <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.375s\"></animate>\n                    </circle>\n                </g>\n            </g><g transform=\"translate(28.78679656440357,28.786796564403577)\">\n                <g transform=\"rotate(225)\">\n                    <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.375\">\n                        <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.25s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n                        <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.25s\"></animate>\n                    </circle>\n                </g>\n            </g><g transform=\"translate(49.99999999999999,20)\">\n                <g transform=\"rotate(270)\">\n                    <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.25\">\n                        <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.125s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n                        <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.125s\"></animate>\n                    </circle>\n                </g>\n            </g><g transform=\"translate(71.21320343559643,28.78679656440357)\">\n                <g transform=\"rotate(315)\">\n                    <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.125\">\n                        <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"0s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n                        <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"0s\"></animate>\n                    </circle>\n                </g>\n            </g>\n        </svg>\n    )\n}\n\nexport default Spinner;","export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif'\n\nconst Error = () => {\n    return (\n        <img src={img}\n            alt='error'\n            style={{\n                display: 'block',\n                width: '250px',\n                height: '250px',\n                objectFit: 'contain',\n                margin: '0 auto'\n            }} />\n        // <img src={process.env.PUBLIC_URL + '/error.gif'} />\n    )\n}\n\nexport default Error;","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","import { Component } from 'react/cjs/react.production.min';\nimport MarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport Error from '../error/Error';\nimport './randomChar.scss';\nimport mjolnir from '../../resources/img/mjolnir.png';\n\nclass RandomChar extends Component {\n    state = {\n        char: {},\n        loading: true,\n        error: false\n    }\n    marvelService = new MarvelService();\n\n    componentDidMount() {\n        this.updateChar();\n        this.timerId = setInterval(this.updateChar, 8000)\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.timerId)\n    }\n\n    onCharLoaded = (char) => {\n        this.setState({\n            char,\n            loading: false\n        })\n    }\n\n    onCharLoading = () => {\n        this.setState({\n            loading: true\n        })\n    }\n\n    onError = () => {\n        this.setState({\n            loading: false,\n            error: true\n        })\n    }\n\n    updateChar = () => {\n        const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\n        this.onCharLoading();\n        this.marvelService\n            .getCharacter(id)\n            .then(this.onCharLoaded)\n            .catch(this.onError);\n    }\n\n    render() {\n        const { char, loading, error } = this.state;\n        const errorM = error ? <Error /> : null;\n        const spinner = loading ? <Spinner /> : null;\n        const content = !(loading || error) ? <View char={char} /> : null;\n\n        return (\n            <div className=\"randomchar\">\n                {errorM}\n                {spinner}\n                {content}\n                <div className=\"randomchar__static\">\n                    <p className=\"randomchar__title\">\n                        Random character for today!<br />\n                        Do you want to get to know him better?\n                    </p>\n                    <p className=\"randomchar__title\">\n                        Or choose another one\n                    </p>\n                    <button onClick={this.updateChar}\n                        className=\"button button__main\">\n                        <div className=\"inner\">try it</div>\n                    </button>\n                    <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\" />\n                </div>\n            </div>\n        )\n    }\n}\nconst View = ({ char }) => {\n    const { name, description, thumbnail, homepage, wiki } = char\n    let imgStyle = { 'objectFit': 'cover' };\n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n        imgStyle = { 'objectFit': 'contain' };\n    }\n    return (\n        <div className=\"randomchar__block\">\n            <img src={thumbnail}\n                alt=\"Random character\"\n                className=\"randomchar__img\"\n                style={imgStyle} />\n            <div className=\"randomchar__info\">\n                <p className=\"randomchar__name\">{name}</p>\n                <p className=\"randomchar__descr\">\n                    {description} </p>\n                <div className=\"randomchar__btns\">\n                    <a href={homepage} className=\"button button__main\">\n                        <div className=\"inner\">homepage</div>\n                    </a>\n                    <a href={wiki} className=\"button button__secondary\">\n                        <div className=\"inner\">Wiki</div>\n                    </a>\n                </div>\n            </div>\n        </div>)\n}\nexport default RandomChar;","import { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Spinner from '../spinner/Spinner';\nimport Error from '../error/Error';\nimport MarvelService from '../../services/MarvelService';\nimport './charList.scss';\n// import abyss from '../../resources/img/abyss.jpg';\n\n\nclass CharList extends Component {\n\n    state = {\n        charList: [],\n        loading: true,\n        error: false,\n        newItemsLoading: false,\n        offset: 210,\n        charEnded: false\n    }\n\n    marvelService = new MarvelService();\n\n    componentDidMount() {\n        this.onRequest()\n    }\n\n    onRequest = (offset) => {\n        this.onCharListLoading()\n        this.marvelService.getAllCharacters(offset)\n            .then(this.onCharListLoaded)\n            .catch(this.onError)\n    }\n\n    onCharListLoading = () => {\n        this.setState({\n            newItemsLoading: true\n        })\n    }\n\n    onCharListLoaded = (newcharList) => {\n        let ended = false;\n        if (newcharList.length < 9) {\n            ended = true\n        }\n\n        this.setState(({ offset, charList }) => ({\n            charList: [...charList, ...newcharList],\n            loading: false,\n            newItemsLoading: false,\n            offset: offset + 9,\n            charEnded: ended\n        }))\n    }\n\n    onError = () => {\n        this.setState({\n            error: true,\n            loading: false\n        })\n    }\n\n    itemRefs = []\n\n    setRef = (ref) => {\n        this.itemRefs.push(ref)\n    }\n\n    focusOnItem = (id) => {\n        this.itemRefs.forEach(item => item.classList.remove('char__item_selected'))\n        this.itemRefs[id].classList.add('char__item_selected')\n        this.itemRefs[id].focus()\n    }\n\n    // Этот метод создан для оптимизации, \n    // чтобы не помещать такую конструкцию в метод render\n    renderItems(arr) {\n        const items = arr.map((item, i) => {\n            let imgStyle = { 'objectFit': 'cover' };\n            if (item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n                imgStyle = { 'objectFit': 'unset' };\n            }\n\n            return (\n                <li\n                    className=\"char__item\"\n                    tabIndex={0}\n                    ref={this.setRef}\n                    key={item.id}\n                    onClick={() => {\n                        this.props.onCharSelected(item.id)\n                        this.focusOnItem(i)\n                    }}\n                    onKeyPress={(e) => {\n                        if (e.key === '' || e.key === 'Enter') {\n                            this.props.onCharSelected(item.id)\n                            this.focusOnItem(i)\n                        }\n                    }}>\n                    <img src={item.thumbnail} alt={item.name} style={imgStyle} />\n                    <div className=\"char__name\">{item.name}</div>\n                </li>\n            )\n        });\n        // А эта конструкция вынесена для центровки спиннера/ошибки\n        return (\n            <ul className=\"char__grid\">\n                {items}\n            </ul>\n        )\n    }\n\n    render() {\n\n        const { charList, loading, error, offset, newItemsLoading, charEnded } = this.state;\n\n        const items = this.renderItems(charList);\n\n        const errorM = error ? <Error /> : null;\n        const spinner = loading ? <Spinner /> : null;\n        const content = !(loading || error) ? items : null;\n\n        return (\n            <div className=\"char__list\">\n                {errorM}\n                {spinner}\n                {content}\n                <button\n                    disabled={newItemsLoading}\n                    style={{ 'display': charEnded ? 'none' : 'block' }}\n                    onClick={() => this.onRequest(offset)}\n                    className=\"button button__main button__long\">\n                    <div className=\"inner\">load more</div>\n                </button>\n            </div >\n        )\n    }\n}\n\nCharList.propTypes = {\n    onCharSelected: PropTypes.func.isRequired\n}\n\nexport default CharList;","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Spinner from '../spinner/Spinner';\nimport Error from '../error/Error';\nimport Skeleton from '../skeleton/Skeleton'\nimport MarvelService from '../../services/MarvelService';\n\nimport './charInfo.scss';\n// import thor from '../../resources/img/thor.jpeg';\n\nclass CharInfo extends Component {\n\n    state = {\n        char: null,\n        loading: false,\n        error: false\n    }\n\n    marvelService = new MarvelService();\n\n    componentDidMount() {\n\n        this.updateChar();\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.charId !== prevProps.charId) {\n            this.updateChar();\n        }\n    }\n\n\n    updateChar = () => {\n        const { charId } = this.props;\n        if (!charId) {\n            return;\n        }\n\n        this.onCharLoading();\n\n        this.marvelService\n            .getCharacter(charId)\n            .then(this.onCharLoaded)\n            .catch(this.onError);\n    }\n\n    onCharLoaded = (char) => {\n        this.setState({\n            char,\n            loading: false\n        })\n    }\n\n    onCharLoading = () => {\n        this.setState({\n            loading: true\n        })\n    }\n\n    onError = () => {\n        this.setState({\n            loading: false,\n            error: true\n        })\n    }\n\n\n    render() {\n        const { char, loading, error } = this.state;\n\n        const skeleton = char || loading || error ? null : <Skeleton />;\n        const errorM = error ? <Error /> : null;\n        const spinner = loading ? <Spinner /> : null;\n        const content = !(loading || error || !char) ? <View char={char} /> : null;\n\n        return (\n            <div className=\"char__info\">\n                {skeleton}\n                {errorM}\n                {spinner}\n                {content}\n            </div>\n        )\n    }\n}\n\n\nconst View = ({ char }) => {\n    const { name, description, thumbnail, homepage, wiki, comics } = char;\n    let imgStyle = { 'objectFit': 'cover' };\n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n        imgStyle = { 'objectFit': 'contain' };\n    }\n    return (\n        <>\n            <div className=\"char__basics\">\n                <img src={thumbnail} alt={name} style={imgStyle} />\n                <div>\n                    <div className=\"char__info-name\">{name}</div>\n                    <div className=\"char__btns\">\n                        <a href={homepage} className=\"button button__main\">\n                            <div className=\"inner\">homepage</div>\n                        </a>\n                        <a href={wiki} className=\"button button__secondary\">\n                            <div className=\"inner\">Wiki</div>\n                        </a>\n                    </div>\n                </div>\n            </div>\n            <div className=\"char__descr\">\n                {description}</div>\n            <div className=\"char__comics\">Comics:</div>\n            <ul className=\"char__comics-list\">\n                {comics.length > 0 ? null : 'Comics not found'}\n\n                {\n                    comics.map((item, i) => {\n                        // eslint-disable-next-line \n                        if (i > 9) return;\n                        return (\n                            <li key={i} className=\"char__comics-item\">\n                                {item.name}\n                            </li>\n                        )\n                    })\n                }\n\n            </ul></>\n    )\n}\nCharInfo.propTypes = {\n    charId: PropTypes.number\n}\n\nexport default CharInfo;","import { Component } from \"react\"\nimport Error from \"../error/Error\"\n\n\nclass ErrorBoundary extends Component {\n    state = {\n        error: false\n    }\n\n    componentDidCatch(error, errorInfo) {\n        this.setState({\n            error: true\n        })\n    }\n    render() {\n        if (this.state.error) {\n            return <Error />\n        }\n        return this.props.children\n    }\n}\n\nexport default ErrorBoundary","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","\nimport { Component } from \"react/cjs/react.production.min\";\nimport AppHeader from \"../appHeader/AppHeader\";\nimport RandomChar from \"../randomChar/RandomChar\";\nimport CharList from \"../charList/CharList\";\nimport CharInfo from \"../charInfo/CharInfo\";\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\n\nimport decoration from '../../resources/img/vision.png';\n\nclass App extends Component {\n\n    state = {\n        selectedChar: null\n    }\n\n    onCharSelected = (id) => {\n        this.setState({\n            selectedChar: id\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"app\">\n                <AppHeader />\n                <main>\n                    <ErrorBoundary>\n                        <RandomChar />\n                    </ErrorBoundary>\n                    <div className=\"char__content\">\n                        <ErrorBoundary>\n                            <CharList onCharSelected={this.onCharSelected} />\n\n                        </ErrorBoundary>\n                        <ErrorBoundary>\n                            <CharInfo charId={this.state.selectedChar} />\n                        </ErrorBoundary>\n                    </div>\n                    <img className=\"bg-decoration\" src={decoration} alt=\"vision\" />\n                </main>\n            </div>\n        )\n    }\n}\n\n\nexport default App;\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/App';\nimport './style/style.scss';\n\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n"],"sourceRoot":""}